import pandas as pd 
import numpy as np 
import seaborn as sns 
import matplotlib.pyplot as plt 
from sklearn.datasets import fetch_california_housing 
# Step 1: Load the California Housing dataset 
housing_df=pd.read_csv("housing.csv") 
# Step 2: Create histograms for numerical features 
numerical_features = housing_df.select_dtypes(include=[np.number]).columns 
# Plot histograms 
plt.figure(figsize=(15, 10)) 
for i, feature in enumerate(numerical_features): 
plt.subplot(3, 3, i + 1) 
sns.histplot(housing_df[feature], kde=True, bins=30, color='blue') 
plt.title(f'Distribution of {feature}') 
plt.tight_layout() 
plt.show() 
# Step 3: Generate box plots for numerical features 
plt.figure(figsize=(15, 10)) 
for i, feature in enumerate(numerical_features): 
plt.subplot(3, 3, i + 1) 
sns.boxplot(x=housing_df[feature], color='orange') 
plt.title(f'Box Plot of {feature}') 
plt.tight_layout() 
DEPT OF CSE, ATMECE 
Page 19 
MACHINE LEARNING LABORATORY                                                            
BCSL606 
plt.show() 
# Step 4: Identify outliers using the IQR method 
print("Outliers Detection:") 
outliers_summary = {} 
for feature in numerical_features: 
Q1 = housing_df[feature].quantile(0.25) 
Q3 = housing_df[feature].quantile(0.75) 
IQR = Q3 - Q1 
lower_bound = Q1 - 1.5 * IQR 
upper_bound = Q3 + 1.5 * IQR 
outliers = housing_df[(housing_df[feature] < lower_bound) |  
(housing_df[feature] > upper_bound)] 
outliers_summary[feature] = len(outliers) 
print(f"{feature}: {len(outliers)} outliers") 
# Optional: Print a summary of the dataset 
print("\nDataset Summary:") 
print(housing_df.describe()) 